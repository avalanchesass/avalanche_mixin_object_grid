/*---
title:   Grid Mixin
section: Mixin
---

Fluid width, responsive grid system.

```css
// Basic grid.
o-grid([$flex: $o-grid-flex])

// Vertical spacing between grid items.
o-grid-spaced-vertical([$spacing: map-get($o-grid-spacing-sizes, m)[, $item-selector: '.o-grid__item']])

// Horizontal spacing between grid items.
o-grid-spaced-horizontal([$spacing: map-get($o-grid-spacing-sizes, m)[, $item-selector: '.o-grid__item']])

// Basic grid item.
o-grid-item([$flex: $o-grid-flex])
```

```css
.foo {
  @include o-grid();
  @include o-grid-spaced-vertical();
  @include o-grid-spaced-horizontal();
}

.bar {
  @include o-grid-item();
}
```
*/
/**
 * Variables
 */
// Flexbox grid system.
$o-grid-flex: true !default;

// Spacing size between items.
$o-grid-spacing-sizes: (
  s: map-get($spacing, m),
  m: map-get($spacing, m),
  l: map-get($spacing, m),
  xl: map-get($spacing, m)
) !default;



@mixin o-grid($flex: $o-grid-flex) {
  @if $flex {
    display: flex;
    flex-wrap: wrap;
  } @else {
    @include u-clearfix();
  }
}

@mixin o-grid-spaced-vertical($spacing: map-get($o-grid-spacing-sizes, m), $item-selector: '.o-grid__item') {
  margin-top: -$spacing;
  > #{$item-selector} {
    margin-top: $spacing;
  }
}

@mixin o-grid-spaced-horizontal($spacing: map-get($o-grid-spacing-sizes, m), $item-selector: '.o-grid__item') {
  margin-left: -$spacing;
  > #{$item-selector} {
    padding-left: $spacing;
  }
}

@mixin o-grid-item($flex: $o-grid-flex) {
  @if $flex != true {
    float: left;
  }
}
